{"version":3,"file":"static/js/940.6390a188.chunk.js","mappings":"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","sources":["Component/MainApp/Projects/Project/AddOrEditProject.js","../node_modules/@mui/material/Box/Box.js","../javascript/esm|/home/pfanse/ReactNestMongo/Project-Management/ProjectManagementFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { Box, Button, Chip, FormControl, Grid, InputLabel, MenuItem, OutlinedInput, Select, Stack, Typography } from \"@mui/material\";\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport moment, { isMoment } from \"moment\";\nimport { useTheme } from '@mui/material/styles';\nimport './Project.css'\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n  \n  function getStyles(name, selectedMembers, theme) {\n    return {\n      fontWeight:\n        selectedMembers.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  \nexport default function AddOrEditProject(props){\n  const [projectId] = React.useState(props.editProjectPageInfo);\n  const [userInfo] = React.useState(props.userInfo)\n  const [isEditProject] = React.useState(props.isEditProject)\n  const [isValidStartDate,setIsValidStartDate] = React.useState(true)\n  const [toggler] = React.useState(props.dataToggler)\n  const theme = useTheme();\n  \n  const [memberList,setMemberList] = React.useState([]);\n  React.useEffect(()=>{\n    if(userInfo && userInfo.role!=='admin')\n        props.handleClose()\n  },[userInfo])\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setProject({ ...project, members: typeof value === 'string' ? value.split(',') : value}\n    );\n  };\n  const [project, setProject] = React.useState({\n    title:'',\n    startDate:null,\n    endDate:null,\n    members:[]\n    });\n  const [validations,setValidations] = React.useState({\n    title:false,\n    dateRange:false,\n    isAttempted:false,\n  });\n  React.useEffect(()=>{\n    if(isEditProject){\n      axios.get('/project/getProject/'+projectId).then((response)=>{\n        setProject(response.data)\n        setIsValidStartDate(response.data.startDate?false:true)\n        setValidations({\n          title:true,\n          dateRange:true,\n          isAttempted:false,\n        })\n      })\n    }\n  },[isEditProject, props.editTaskPageInfo])\n  React.useEffect(()=>{\n    axios.get('/user/getUsersList/'+'allUser').then((res)=>{\n        setMemberList(res.data)\n    })\n  },[])\n  const updateValue = (ev) =>{\n    setProject({...project, [ev.target.name]: ev.target.value})\n    validateForm(ev)\n  }\n  const validateForm=(ev,dateRange)=>{\n    if(dateRange){\n      if(isMoment(dateRange[0]) && isMoment(dateRange[1]) &&\n        dateRange[0].isSameOrBefore(dateRange[1],'date')){\n          if(isValidStartDate && dateRange[0].isSameOrAfter(new Date(),'date'))\n            setValidations({...validations,dateRange:true})\n          else\n            setValidations({...validations,dateRange:false})\n        } else {\n          setValidations({...validations,dateRange:false})  \n        }\n    } else{\n      switch(ev.target.name){\n        case'title': setValidations({...validations, title:validator.isLength(ev.target.value,{min:3})})\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  const addTask=(ev)=>{\n    ev.preventDefault();\n    if(validations.title && validations.dateRange){\n        axios.post('/project/createProject',project).then((res)=>{\n          toggler.setDataToggler(!toggler.dataToggler)\n          props.handleClose()\n        })\n      } else {\n        setValidations({...validations, isAttempted:true})\n      }\n  }\n  const updateTask=(ev)=>{\n    ev.preventDefault();\n    if(validations.title && validations.dateRange){\n        axios.put('/project/updateProject',project).then((res)=>{\n          props.handleClose()\n        })\n      } else {\n        setValidations({...validations, isAttempted:true})\n      }\n  }\n\n  const selectedMembers =(selected)=>{\n    return (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n            {memberList.map((member) => (\n              selected.indexOf(member._id)!==-1?<Chip key={member._id} label={member.username} />:''\n            ))}\n        </Box>\n    )\n  }\n  return(\n      <Box component=\"form\" autoComplete=\"off\" onSubmit={isEditProject?updateTask:addTask} sx={style}>\n        <Typography sx={{mb:1}} id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n          {isEditProject?'Edit':'Add'} Project\n        </Typography>\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <TextField sx={{width:'100%', mb:1}}\n                id=\"filled-textarea\"\n                value={project.title}\n                name=\"title\"\n                label=\"Project Name\"\n                placeholder=\"Placeholder\"\n                variant=\"standard\"\n                size=\"small\"\n                required\n                error={!validations.title && validations.isAttempted}\n                helperText=\"Must have min 3 character.\"\n                onChange={updateValue}\n                />\n            </Grid>\n            <LocalizationProvider dateAdapter={DateAdapter}>\n              <DateRangePicker\n                disablePast={isValidStartDate}\n                value={[project.startDate,project.endDate]}\n                // minDate={new Date()}\n                onChange={(newValue) => {\n                  if(!moment(newValue[0]).isSame(project.startDate,'date'))\n                    setIsValidStartDate(true)\n                  newValue[1]\n                    ?setProject({...project, startDate:newValue[0]._d, endDate:newValue[1]._d})\n                    :setProject({...project, startDate:newValue[0]._d})\n                  validateForm('',newValue)\n                }}\n                renderInput={(startProps, endProps) => (\n                  <React.Fragment>\n                    <TextField sx={{ml:2}}  required variant=\"standard\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField variant=\"standard\" required {...endProps} />\n                  </React.Fragment>\n                )}\n              />\n            </LocalizationProvider>\n            <Grid item xs={12}>\n              <TextField sx={{width:'100%'}}\n              name=\"description\"\n              value={project.description?project.description:''}\n              id=\"filled-textarea\"\n              label=\"Description\"\n              placeholder=\"Description\"\n              multiline\n              variant=\"filled\"\n              rows={4}\n              onChange={updateValue}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n                <FormControl className=\"selectMembers\" sx={{mt:1,width: '100%' }}>\n                    <InputLabel id=\"multiple-member-label\">Chip</InputLabel>\n                    <Select\n                      labelId=\"multiple-member-label\"\n                      id=\"multiple-member\"\n                      multiple\n                      value={project.members}\n                      onChange={handleChange}\n                      input={<OutlinedInput id=\"select-multiple-member\" label=\"Chip\" />}\n                      renderValue={(selected) => selectedMembers(selected)}\n                      MenuProps={MenuProps}\n                    >\n                      {memberList.map((member) => (\n                        <MenuItem\n                          key={member._id}\n                          value={member._id}\n                          style={getStyles(member._id, project.members, theme)}\n                        >\n                            <Grid container spacing={2}>\n                                <Grid item xs={8}>{member.username}</Grid>\n                                <Grid item sx={{textAlign:'right'}} xs={4}>\n                                    <Chip\n                                        sx={{textTransform: \"uppercase\"}}\n                                        label={member.role}\n                                        size=\"small\"/>\n                                </Grid>\n                            </Grid>\n                        </MenuItem>\n                      ))}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Stack direction=\"row\" spacing={2}>\n                <Button type='submit' variant=\"contained\">{isEditProject?'Update':'Add'}</Button>\n                <Button variant=\"outlined\" onClick={props.handleClose}>Cancel</Button>\n              </Stack>\n            </Grid>\n        </Grid>\n      </Box>\n  )\n}\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'white',\n  borderRadius: '10px',\n  boxShadow: '3px 3px 10px #434242bd',\n  p: 4,\n};","import { createBox } from '@mui/system';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../utils';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\n/**\n * @ignore - do not document.\n */\n\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nexport default Box;","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","name","selectedMembers","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","AddOrEditProject","props","React","editProjectPageInfo","projectId","userInfo","isEditProject","isValidStartDate","setIsValidStartDate","dataToggler","toggler","useTheme","memberList","setMemberList","role","handleClose","title","startDate","endDate","members","project","setProject","dateRange","isAttempted","validations","setValidations","axios","then","response","data","editTaskPageInfo","res","updateValue","ev","target","value","validateForm","isMoment","isSameOrBefore","isSameOrAfter","Date","validator","min","Box","component","autoComplete","onSubmit","preventDefault","setDataToggler","sx","Typography","mb","id","variant","Grid","container","spacing","item","xs","TextField","label","placeholder","size","required","error","helperText","onChange","LocalizationProvider","dateAdapter","DateAdapter","DateRangePicker","disablePast","newValue","moment","isSame","_d","renderInput","startProps","endProps","ml","mx","description","multiline","rows","FormControl","className","mt","InputLabel","Select","labelId","multiple","event","split","input","OutlinedInput","renderValue","selected","display","flexWrap","gap","map","member","_id","Chip","username","MenuItem","textAlign","textTransform","Stack","direction","Button","type","onClick","position","top","left","transform","bgcolor","borderRadius","boxShadow","p","defaultTheme","createTheme","createBox","defaultClassName","generateClassName","ClassNameGenerator","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}