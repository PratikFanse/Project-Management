{"version":3,"file":"static/js/506.d44b2c19.chunk.js","mappings":"yRAKMA,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,iCAEjB,SAASC,EAAUC,GAC9B,IAAMC,GAAeC,EAAAA,EAAAA,MAAcC,SAEnC,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,EAAAA,cAAeG,GAArD,eAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCL,EAAAA,SAAe,IAAnD,eAAOM,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,WACZD,EAAc,0BACdF,GAAe,kBAAMI,KACrBP,GAAQ,IAGNQ,EAAkB,WACpBH,EAAc,2BACdF,GAAe,kBAAMI,KACrBP,GAAQ,IAEZ,OACI,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAAC,UAAD,IAApB,SAjBe,CAAC,IAAI,SAAS,UAAU,kBAAkB,kBAmB5CC,SAAShB,IAClB,mBAAQiB,UAAU,kBAAlB,UACI,UAACC,EAAA,GAAD,CAAMD,UAAU,eAAeE,WAAS,EAACC,QAAS,EAAlD,WACI,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,KACf,UAACJ,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,WACI,SAACC,EAAA,EAAD,CAAYC,GAAI,CAACC,GAAG,EAAGC,GAAG,EAAGC,GAAG,GAAIC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAxE,yBACA,SAACP,EAAA,EAAD,CAAYC,GAAI,CAACC,GAAG,EAAGC,GAAG,EAAGC,GAAG,GAAIC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAxE,2CAEJ,SAACZ,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACI,SAAC1B,EAAD,CAAcmC,UAAWpB,EAASqB,YAAanB,OAEnD,SAACK,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,KACf,SAACW,EAAA,EAAD,CACE7B,KAAMA,EACN8B,qBAAsB3B,EACtB4B,iBAAkB,IAClBC,QAAS,kBAAI/B,GAAQ,IAJvB,UAMI,SAACgC,EAAA,EAAD,CAAQD,QAAS,kBAAI/B,GAAQ,IAAQiC,SAAS,UAAUd,GAAI,CAAEe,MAAO,QAArE,SACK9B,KAFFF,EAAcA,EAAYiC,KAAO,UAOnD,SAAC5C,EAAD,CAAcmC,UAAWpB,EAASqB,YAAanB,MAKxD,SAASD,EAAcb,GACnB,OAAO,SAAC0C,EAAA,GAAD,kBAAW1C,GAAX,IAAkB2C,UAAU","sources":["Component/Public/Public.app.js"],"sourcesContent":["import React, { lazy, Suspense } from \"react\"\nimport { Alert, Grid, Slide, Snackbar, Typography } from \"@mui/material\"\nimport { useLocation } from \"react-router\"\nimport './Public.App.css'\nimport Loader from \"../Common/loader\"\nconst PublicRoutes = lazy(() => import(\"./Public.routes\"))\n\nexport default function PublicApp(props){\n    const currentRoute = useLocation().pathname\n    const publicRoutes=['/','/login','/signup','/forgotPassword','/resetPassword'];\n    const [open, setOpen] = React.useState(false);\n    const [transission, setTransission] = React.useState(undefined);\n    const [notifyText, setNotifyText] = React.useState('')\n \n    const otpSent = () => {\n        setNotifyText('OTP sent successfully!')\n        setTransission(() => TransissionUp);\n        setOpen(true);\n    };\n\n    const passwordChanged = () => {\n        setNotifyText('Your password is reset!')\n        setTransission(() => TransissionUp);\n        setOpen(true);\n    };\n    return(\n        <Suspense fallback={<Loader/>}>\n        {\n        publicRoutes.includes(currentRoute)?\n            <header className=\"PublicAppHeader\">\n                <Grid className='publicScreen' container spacing={2}>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={5}>\n                        <Typography sx={{mx:1, mt:1, mb:0}} gutterBottom variant='h5' component=\"div\">Welcome to</Typography>\n                        <Typography sx={{mx:1, mt:1, mb:0}} gutterBottom variant='h4' component=\"div\">Project Management System</Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <PublicRoutes notifyOTP={otpSent} passChanged={passwordChanged}/>\n                    </Grid>\n                    <Grid item xs={2}></Grid>\n                    <Snackbar\n                      open={open}\n                      TransissionComponent={transission}\n                      autoHideDuration={6000}\n                      onClose={()=>setOpen(false)}\n                      key={transission ? transission.name : ''}>\n                        <Alert  onClose={()=>setOpen(false)} severity=\"success\" sx={{ width: '100%' }}>\n                            {notifyText}\n                        </Alert>\n                    </Snackbar>\n                </Grid>\n            </header>\n        :<PublicRoutes notifyOTP={otpSent} passChanged={passwordChanged}/>\n        }\n        </Suspense>\n    )\n}\nfunction TransissionUp(props) {\n    return <Slide {...props} direction=\"up\" />;\n}"],"names":["PublicRoutes","lazy","PublicApp","props","currentRoute","useLocation","pathname","React","open","setOpen","undefined","transission","setTransission","notifyText","setNotifyText","otpSent","TransissionUp","passwordChanged","Suspense","fallback","includes","className","Grid","container","spacing","item","xs","Typography","sx","mx","mt","mb","gutterBottom","variant","component","notifyOTP","passChanged","Snackbar","TransissionComponent","autoHideDuration","onClose","Alert","severity","width","name","Slide","direction"],"sourceRoot":""}