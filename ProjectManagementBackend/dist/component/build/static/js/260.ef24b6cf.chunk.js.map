{"version":3,"file":"static/js/260.ef24b6cf.chunk.js","mappings":"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","sources":["Component/MainApp/Projects/Projects.js"],"sourcesContent":["import { Button, Grid, Modal, Table, TableContainer, TableHead, TableRow} from '@mui/material';\nimport axios from 'axios';\nimport * as React from 'react';\nimport { useNavigate } from 'react-router';\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport { Box } from '@mui/system';\nimport { styled } from '@mui/material/styles';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport Paper from '@mui/material/Paper';\nimport moment from 'moment';\nimport './Projects.css'\nimport Loader from '../../Common/loader';\nimport { Link } from 'react-router-dom';\nconst AddOrEditProject = React.lazy(() => import('./Project/AddOrEditProject'));\n\nexport default function Projects(props){\n    const [userInfo] = React.useState(props.userInfo?props.userInfo:null)\n    const [open, setOpen] = React.useState(false);\n    const [isEditProjectPage,setIsEditProjectPage] = React.useState(false)\n    const [editProjectPageInfo,setEditProjectPageInfo] = React.useState('')\n    const [projectRoute, setProjectRoute] = React.useState();\n    const [projectId, setProjectId] = React.useState(null);\n    const [dataToggler, setDataToggler] = React.useState(true);\n    const handleOpen = (isEdit,editTaskId) => {\n      setEditProjectPageInfo(editTaskId?editTaskId:'');\n      setIsEditProjectPage(isEdit)\n      setOpen(true);\n    }\n    const handleClose = () => setOpen(false); \n    const [projectList, setProjectList] = React.useState([]);\n    React.useEffect(() =>{\n        axios.get('/project/getProjectList').then((res)=>{\n            setProjectList(res.data)\n        })\n    },[dataToggler])\n    const openProject =(id)=>{\n      setProjectId({id})\n    }\n    React.useEffect(()=>{\n      if(projectId)\n        projectRoute.click()\n    },[projectId])\n    return(\n      <React.Suspense fallback={<Loader/>}>\n        <Grid className='projectsPage' container spacing={2}>\n            <Grid className=\"mainAppHeader\" item container xs={12}>\n              <Grid item xs={6}>\n                <h1>Projects</h1>\n              </Grid>\n              {userInfo && userInfo.role ==='admin' \n                ?<Grid item xs={6} sx={{textAlign:'right',mt:3,pr:9}}>\n                      <Button variant=\"contained\" onClick={()=>handleOpen(false)}\n                      ><AddRoundedIcon/>Add Project </Button>\n                </Grid>:''\n              }  \n            </Grid>\n            <Grid item sx={{m:2,mr:4}} xs={12}>\n              <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                  <TableHead>\n                    <TableRow>\n                      <StyledTableCell>Project</StyledTableCell>\n                      <StyledTableCell align=\"right\">Status</StyledTableCell>\n                      <StyledTableCell align=\"right\">Owner</StyledTableCell>\n                      <StyledTableCell align=\"right\">Start Date</StyledTableCell>\n                      <StyledTableCell align=\"right\">End Date</StyledTableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {\n                      projectList.map((project) => (\n                          <StyledTableRow onClick={()=>openProject(project._id)} hover className='projectRow' key={project._id}>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {project.title}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">{project.status}</StyledTableCell>\n                              <StyledTableCell align=\"right\">{project.owner.username}</StyledTableCell>\n                              <StyledTableCell align=\"right\">{moment(project.startDate).format('MMM-DD-YYYY')}</StyledTableCell>\n                              <StyledTableCell align=\"right\">{moment(project.endDate).format('MMM-DD-YYYY')}</StyledTableCell>\n                          </StyledTableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                {projectList.length?\n                  '':\n                  <TableContainer>\n                    <div className='noData'>\n                        There is no task for now, please create new task.\n                    </div>\n                  </TableContainer>\n                }\n              </TableContainer>\n              <Modal\n                open={open}\n                onClose={handleClose}\n                // aria-labelledby=\"modal-modal-title\"\n                // aria-describedby=\"modal-modal-description\"\n                >\n                  <Box>\n                    <AddOrEditProject isEditTask={isEditProjectPage} editProjectPageInfo={editProjectPageInfo} dataToggler={{dataToggler:dataToggler, setDataToggler:setDataToggler}} handleClose={handleClose}/>\n                  </Box>\n              </Modal>\n            </Grid>\n        </Grid>\n        <Link to=\"/project\" state={projectId} ref={input => setProjectRoute(input)}></Link>\n        </React.Suspense>\n    )\n}\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: '#2d2f35',\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n"],"names":["AddOrEditProject","React","Projects","props","userInfo","open","setOpen","isEditProjectPage","setIsEditProjectPage","editProjectPageInfo","setEditProjectPageInfo","projectRoute","setProjectRoute","projectId","setProjectId","dataToggler","setDataToggler","handleClose","projectList","setProjectList","axios","then","res","data","click","fallback","Grid","className","container","spacing","item","xs","role","sx","textAlign","mt","pr","Button","variant","onClick","isEdit","editTaskId","AddRounded","m","mr","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","StyledTableCell","align","TableBody","map","project","StyledTableRow","id","_id","hover","scope","title","status","owner","username","moment","startDate","format","endDate","length","Modal","onClose","Box","isEditTask","to","state","ref","input","styled","TableCell","theme","tableCellClasses","backgroundColor","color","palette","common","white","fontSize","action","border"],"sourceRoot":""}