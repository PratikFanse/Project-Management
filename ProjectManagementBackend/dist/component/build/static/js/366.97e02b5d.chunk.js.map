{"version":3,"file":"static/js/366.97e02b5d.chunk.js","mappings":"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","sources":["Component/MainApp/Projects/Project/AddOrEditProject.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js"],"sourcesContent":["import LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { Box, Button, Chip, FormControl, Grid, InputLabel, MenuItem, OutlinedInput, Select, Stack, Typography } from \"@mui/material\";\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport DateRangePicker from '@mui/lab/DateRangePicker';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport moment, { isMoment } from \"moment\";\nimport { useTheme } from '@mui/material/styles';\nimport './Project.css'\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n  \n  function getStyles(name, selectedMembers, theme) {\n    return {\n      fontWeight:\n        selectedMembers.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  \nexport default function AddOrEditProject(props){\n  const [projectId] = React.useState(props.editProjectPageInfo);\n  const [userInfo] = React.useState(props.userInfo)\n  const [isEditProject] = React.useState(props.isEditProject)\n  const [isValidStartDate,setIsValidStartDate] = React.useState(true)\n  const [toggler] = React.useState(props.dataToggler)\n  const theme = useTheme();\n  \n  const [memberList,setMemberList] = React.useState([]);\n  React.useEffect(()=>{\n    if(userInfo && userInfo.role!=='admin')\n        props.handleClose()\n  },[userInfo])\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setProject({ ...project, members: typeof value === 'string' ? value.split(',') : value}\n    );\n  };\n  const [project, setProject] = React.useState({\n    title:'',\n    startDate:null,\n    endDate:null,\n    members:[]\n    });\n  const [validations,setValidations] = React.useState({\n    title:false,\n    dateRange:false,\n    isAttempted:false,\n  });\n  React.useEffect(()=>{\n    if(isEditProject){\n      axios.get('/project/getProject/'+projectId).then((response)=>{\n        setProject(response.data)\n        setIsValidStartDate(response.data.startDate?false:true)\n        setValidations({\n          title:true,\n          dateRange:true,\n          isAttempted:false,\n        })\n      })\n    }\n  },[isEditProject, props.editTaskPageInfo])\n  React.useEffect(()=>{\n    axios.get('/user/getUsersList/'+'allUser').then((res)=>{\n        setMemberList(res.data)\n    })\n  },[])\n  const updateValue = (ev) =>{\n    setProject({...project, [ev.target.name]: ev.target.value})\n    validateForm(ev)\n  }\n  const validateForm=(ev,dateRange)=>{\n    if(dateRange){\n      if(isMoment(dateRange[0]) && isMoment(dateRange[1]) &&\n        dateRange[0].isSameOrBefore(dateRange[1],'date')){\n          if(isValidStartDate && dateRange[0].isSameOrAfter(new Date(),'date'))\n            setValidations({...validations,dateRange:true})\n          else\n            setValidations({...validations,dateRange:false})\n        } else {\n          setValidations({...validations,dateRange:false})  \n        }\n    } else{\n      switch(ev.target.name){\n        case'title': setValidations({...validations, title:validator.isLength(ev.target.value,{min:3})})\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  const addTask=(ev)=>{\n    ev.preventDefault();\n    if(validations.title && validations.dateRange){\n        axios.post('/project/createProject',project).then((res)=>{\n          toggler.setDataToggler(!toggler.dataToggler)\n          props.handleClose()\n        })\n      } else {\n        setValidations({...validations, isAttempted:true})\n      }\n  }\n  const updateTask=(ev)=>{\n    ev.preventDefault();\n    if(validations.title && validations.dateRange){\n        axios.put('/project/updateProject',project).then((res)=>{\n          props.handleClose()\n        })\n      } else {\n        setValidations({...validations, isAttempted:true})\n      }\n  }\n\n  const selectedMembers =(selected)=>{\n    return (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n            {memberList.map((member) => (\n              selected.indexOf(member._id)!==-1?<Chip key={member._id} label={member.username} />:''\n            ))}\n        </Box>\n    )\n  }\n  return(\n      <Box component=\"form\" autoComplete=\"off\" onSubmit={isEditProject?updateTask:addTask} sx={style}>\n        <Typography sx={{mb:1}} id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n          {isEditProject?'Edit':'Add'} Project\n        </Typography>\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <TextField sx={{width:'100%', mb:1}}\n                id=\"filled-textarea\"\n                value={project.title}\n                name=\"title\"\n                label=\"Project Name\"\n                placeholder=\"Placeholder\"\n                variant=\"standard\"\n                size=\"small\"\n                required\n                error={!validations.title && validations.isAttempted}\n                helperText=\"Must have min 3 character.\"\n                onChange={updateValue}\n                />\n            </Grid>\n            <LocalizationProvider dateAdapter={DateAdapter}>\n              <DateRangePicker\n                disablePast={isValidStartDate}\n                value={[project.startDate,project.endDate]}\n                // minDate={new Date()}\n                onChange={(newValue) => {\n                  if(!moment(newValue[0]).isSame(project.startDate,'date'))\n                    setIsValidStartDate(true)\n                  newValue[1]\n                    ?setProject({...project, startDate:newValue[0]._d, endDate:newValue[1]._d})\n                    :setProject({...project, startDate:newValue[0]._d})\n                  validateForm('',newValue)\n                }}\n                renderInput={(startProps, endProps) => (\n                  <React.Fragment>\n                    <TextField sx={{ml:2}}  required variant=\"standard\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField variant=\"standard\" required {...endProps} />\n                  </React.Fragment>\n                )}\n              />\n            </LocalizationProvider>\n            <Grid item xs={12}>\n              <TextField sx={{width:'100%'}}\n              name=\"description\"\n              value={project.description?project.description:''}\n              id=\"filled-textarea\"\n              label=\"Description\"\n              placeholder=\"Description\"\n              multiline\n              variant=\"filled\"\n              rows={4}\n              onChange={updateValue}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n                <FormControl className=\"selectMembers\" sx={{mt:1,width: '100%' }}>\n                    <InputLabel id=\"multiple-member-label\">Chip</InputLabel>\n                    <Select\n                      labelId=\"multiple-member-label\"\n                      id=\"multiple-member\"\n                      multiple\n                      value={project.members}\n                      onChange={handleChange}\n                      input={<OutlinedInput id=\"select-multiple-member\" label=\"Chip\" />}\n                      renderValue={(selected) => selectedMembers(selected)}\n                      MenuProps={MenuProps}\n                    >\n                      {memberList.map((member) => (\n                        <MenuItem\n                          key={member._id}\n                          value={member._id}\n                          style={getStyles(member._id, project.members, theme)}\n                        >\n                            <Grid container spacing={2}>\n                                <Grid item xs={8}>{member.username}</Grid>\n                                <Grid item sx={{textAlign:'right'}} xs={4}>\n                                    <Chip\n                                        sx={{textTransform: \"uppercase\"}}\n                                        label={member.role}\n                                        size=\"small\"/>\n                                </Grid>\n                            </Grid>\n                        </MenuItem>\n                      ))}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Stack direction=\"row\" spacing={2}>\n                <Button type='submit' variant=\"contained\">{isEditProject?'Update':'Add'}</Button>\n                <Button variant=\"outlined\" onClick={props.handleClose}>Cancel</Button>\n              </Stack>\n            </Grid>\n        </Grid>\n      </Box>\n  )\n}\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'white',\n  borderRadius: '10px',\n  boxShadow: '3px 3px 10px #434242bd',\n  p: 4,\n};","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses'; // Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return (alphaValue / 100).toFixed(2);\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\n\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.text.primary,\n  transition: theme.transitions.create('box-shadow')\n}, !ownerState.square && {\n  borderRadius: theme.shape.borderRadius\n}, ownerState.variant === 'outlined' && {\n  border: `1px solid ${theme.palette.divider}`\n}, ownerState.variant === 'elevation' && _extends({\n  boxShadow: theme.shadows[ownerState.elevation]\n}, theme.palette.mode === 'dark' && {\n  backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n})));\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n\n  const {\n    className,\n    component = 'div',\n    elevation = 1,\n    square = false,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","name","selectedMembers","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","AddOrEditProject","props","React","editProjectPageInfo","projectId","userInfo","isEditProject","isValidStartDate","setIsValidStartDate","dataToggler","toggler","useTheme","memberList","setMemberList","role","handleClose","title","startDate","endDate","members","project","setProject","dateRange","isAttempted","validations","setValidations","axios","then","response","data","editTaskPageInfo","res","updateValue","ev","target","value","validateForm","isMoment","isSameOrBefore","isSameOrAfter","Date","validator","min","Box","component","autoComplete","onSubmit","preventDefault","setDataToggler","sx","Typography","mb","id","variant","Grid","container","spacing","item","xs","TextField","label","placeholder","size","required","error","helperText","onChange","LocalizationProvider","dateAdapter","DateAdapter","DateRangePicker","disablePast","newValue","moment","isSame","_d","renderInput","startProps","endProps","ml","mx","description","multiline","rows","FormControl","className","mt","InputLabel","Select","labelId","multiple","event","split","input","OutlinedInput","renderValue","selected","display","flexWrap","gap","map","member","_id","Chip","username","MenuItem","textAlign","textTransform","Stack","direction","Button","type","onClick","position","top","left","transform","bgcolor","borderRadius","boxShadow","p","getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","getOverlayAlpha","elevation","Math","log","toFixed","PaperRoot","styled","overridesResolver","styles","ownerState","root","square","rounded","_extends","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","shape","border","divider","shadows","mode","backgroundImage","alpha","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}